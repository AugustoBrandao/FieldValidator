import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/cpf/dist/cpf.min.js
var require_cpf_min = __commonJS({
  "node_modules/cpf/dist/cpf.min.js"(exports, module) {
    !function(r, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.CPF = t() : r.CPF = t();
    }("undefined" != typeof self ? self : exports, function() {
      return function(e) {
        var n = {};
        function o(r) {
          if (n[r])
            return n[r].exports;
          var t = n[r] = { i: r, l: false, exports: {} };
          return e[r].call(t.exports, t, t.exports, o), t.l = true, t.exports;
        }
        return o.m = e, o.c = n, o.d = function(r, t, e2) {
          o.o(r, t) || Object.defineProperty(r, t, { enumerable: true, get: e2 });
        }, o.r = function(r) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(r, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(r, "__esModule", { value: true });
        }, o.t = function(t, r) {
          if (1 & r && (t = o(t)), 8 & r)
            return t;
          if (4 & r && "object" == typeof t && t && t.__esModule)
            return t;
          var e2 = /* @__PURE__ */ Object.create(null);
          if (o.r(e2), Object.defineProperty(e2, "default", { enumerable: true, value: t }), 2 & r && "string" != typeof t)
            for (var n2 in t)
              o.d(e2, n2, function(r2) {
                return t[r2];
              }.bind(null, n2));
          return e2;
        }, o.n = function(r) {
          var t = r && r.__esModule ? function() {
            return r.default;
          } : function() {
            return r;
          };
          return o.d(t, "a", t), t;
        }, o.o = function(r, t) {
          return Object.prototype.hasOwnProperty.call(r, t);
        }, o.p = "", o(o.s = 2);
      }([function(r, t, e) {
        "use strict";
        r.exports = function(r2) {
          if ("string" != typeof r2)
            throw new Error("Invalid CPF number");
          var t2 = r2.replace(/\D/g, "");
          if (11 !== t2.length)
            throw new Error("Invalid CPF number");
          return t2.replace(/^(\d{3})(\d{3})(\d{3})(\d{2})$/, "$1.$2.$3-$4");
        };
      }, function(r, t, e) {
        "use strict";
        var o = e(5), u = function(r2) {
          return /^\d$/.test(r2);
        }, n = function(r2, t2) {
          return r2 + t2;
        }, i = function(r2) {
          return r2.map(function(r3, t2) {
            return r3 * (9 - t2 % 10);
          }).reduce(n);
        };
        r.exports = function() {
          var r2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], t2 = Array.from(r2 || []);
          if (!t2.every(u) || 9 !== r2.length)
            throw new Error("Invalid digits");
          var e2 = o(t2), n2 = [];
          return n2[0] = i(e2) % 11 % 10, n2[1] = (i([0].concat(function(r3) {
            if (Array.isArray(r3)) {
              for (var t3 = 0, e3 = Array(r3.length); t3 < r3.length; t3++)
                e3[t3] = r3[t3];
              return e3;
            }
            return Array.from(r3);
          }(e2))) + 9 * n2[0]) % 11 % 10, n2;
        };
      }, function(r, t, e) {
        "use strict";
        r.exports.format = e(0), r.exports.generate = e(3), r.exports.isValid = e(6);
      }, function(r, t, e) {
        "use strict";
        function u(r2) {
          if (Array.isArray(r2)) {
            for (var t2 = 0, e2 = Array(r2.length); t2 < r2.length; t2++)
              e2[t2] = r2[t2];
            return e2;
          }
          return Array.from(r2);
        }
        var i = e(4), f = e(1), a = e(0);
        r.exports = function() {
          var r2 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t2 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], e2 = i(0, 9).oned(9, { round: true }), n = t2 ? i(0, 9).oned(2, { round: true }) : f(e2), o = [].concat(u(e2), u(n)).join("");
          return r2 ? a(o) : o;
        };
      }, function(r, t, e) {
        "use strict";
        var n = function(r2, t2, e2, n2) {
          var o = (n2 || {}).round;
          return Array.apply(null, { length: r2 }).map(function() {
            var r3 = Math.random() * (e2 - t2) + t2;
            return true === o ? Math.round(r3) : r3;
          });
        };
        r.exports = function(i, f) {
          return { oned: function(r2, t2) {
            return n(r2, i, f, t2);
          }, twod: function(r2, t2, e2) {
            return Array.apply(null, { length: r2 }).map(function() {
              return n(t2, i, f, e2);
            });
          }, genWhile: function(r2, t2) {
            for (var e2 = [], n2 = (t2 || {}).limit || 1e4, o = 0; o !== n2; ) {
              var u = Math.random() * (f - i) + i;
              if (e2.push(u), r2(u))
                return e2;
              o += 1;
            }
            return e2;
          } };
        };
      }, function(r, t, e) {
        "use strict";
        r.exports = function(r2) {
          if (!Array.isArray(r2))
            throw new TypeError("Expected an array");
          return r2.reverse();
        };
      }, function(r, t, e) {
        "use strict";
        var a = function(r2, t2) {
          if (Array.isArray(r2))
            return r2;
          if (Symbol.iterator in Object(r2))
            return function(r3, t3) {
              var e2 = [], n = true, o = false, u = void 0;
              try {
                for (var i, f = r3[Symbol.iterator](); !(n = (i = f.next()).done) && (e2.push(i.value), !t3 || e2.length !== t3); n = true)
                  ;
              } catch (r4) {
                o = true, u = r4;
              } finally {
                try {
                  !n && f.return && f.return();
                } finally {
                  if (o)
                    throw u;
                }
              }
              return e2;
            }(r2, t2);
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }, c = e(1);
        r.exports = function(r2) {
          var t2 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
          if ("string" != typeof r2)
            return false;
          var e2, n, o = r2.replace(/\D/g, "");
          if (!o)
            return false;
          if (n = (e2 = o).charAt(0), RegExp("^" + n + "+$").test(e2))
            return false;
          if (11 !== o.length)
            return false;
          if (t2 && 11 === o.length)
            return true;
          var u = o.match(/^(\d{9})(\d{2})$/), i = a(u, 3), f = i[1];
          return i[2] === c(f).join("");
        };
      }]);
    });
  }
});
export default require_cpf_min();
/*! Bundled license information:

cpf/dist/cpf.min.js:
  (*! cpf v2.0.1 | (c) 2015-2019 by Matheus Alves *)
*/
//# sourceMappingURL=cpf.js.map
